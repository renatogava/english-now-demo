@model EnglishNowDemo.Web.ViewModels.Aluno.CriarViewModel
@{
    ViewData["Title"] = "Novo Aluno";
}

<h1 class="py-4">Novo Aluno</h1>

<form class="row g-3 needs-validation" asp-controller="Aluno" asp-action="Criar" novalidate>
    <div class="col-md-6">
        <label for="inputLogin" class="form-label">Login</label>
        <input type="text" class="form-control" id="inputLogin" asp-for="Login" required>
    </div>
    <div class="col-md-6">
        <label for="inputSenha" class="form-label">Senha</label>
        <input type="text" class="form-control" id="inputSenha" asp-for="Senha" required>
    </div>
    <div class="col-12">
        <label for="inputNome" class="form-label">Nome Completo</label>
        <input type="text" class="form-control" id="inputNome" placeholder="Seu Nome Completo" asp-for="NomeCompleto" required>
    </div>
    <div class="col-12">
        <label for="inputEmail" class="form-label">Email</label>
        <input type="email" class="form-control" id="inputEmail" placeholder="seuemail@exemplo.com.br" asp-for="Email" required>
    </div>
    <div class="col-12">
        <button type="submit" class="btn btn-primary">Salvar</button>
    </div>

    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

</form>


@section Scripts {
    <script>

        const forms = document.querySelectorAll('.needs-validation')

        // Loop over them and prevent submission
        Array.from(forms).forEach(form => {
          form.addEventListener('submit', event => {
            if (!form.checkValidity()) {
              event.preventDefault()
              event.stopPropagation()
            }

            form.classList.add('was-validated')
          }, false)
        })

    </script>
}